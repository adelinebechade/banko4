{% extends 'base.html.twig' %}

{% block title %}
    Compte - {{ compte.nom }}
{% endblock %}

{% block body %}
    <main role="main" class="col-md-10 ml-sm-auto col-lg-10 px-4">
        <input type="hidden" id="count" value="{{ count_mouvement }}" />
        <br/>

        <h1>{{ compte.nom }}</h1>
        <h4 class="float-left text-success">{{ 'current'|trans }} : <span id="courant" >{{ solde.courant }}</span> €</h4>
        <h4 class="float-right text-warning">{{ 'forecast'|trans }} : <span id="previsionnel">{{ solde.previsionnel }}</span> €</h4>

        <div id="main" class="table-responsive">
            {{ render(controller('App\\Controller\\MouvementController::new', {'id': compte.id})) }}

            <table class="table table-bordered table-sm">
                <thead class="thead-light">
                    <tr class="d-flex">
                        <th class="col-1 text-center">{{ 'treated'|trans }}</th>
                        <th class="col-4 text-center">{{ 'title'|trans }}</th>
                        <th class="col-2 text-center">{{ 'date'|trans }}</th>
                        <th class="col-2 text-center">{{ 'credit'|trans }}</th>
                        <th class="col-2 text-center">{{ 'debit'|trans }}</th>
                        <th class="col-1 text-center">{{ 'actions'|trans }}</th>
                    </tr>
                </thead>
                <tbody>
                {% for mouvement in pagination %}
                    <tr class="d-flex mouvements" data-id="{{ mouvement.id }}">
                        <td id="traite" class="col-1 text-center">
                            <label for="traite"></label>
                            <input type="checkbox" {% if mouvement.traite == 1 %}checked{% endif %}>
                        </td>
                        <td class="col-4">{{ mouvement.libelle }}</td>
                        <td class="col-2 text-center">{{ mouvement.date|date("d/m/Y") }}</td>
                        <td class="col-2 text-center">{{ mouvement.credit }}</td>
                        <td class="col-2 text-center">{{ mouvement.debit }}</td>
                        <td class="col-1 text-center">
                            <span class="mouvement-update"><a href="{{ path('mouvement_update', { 'id': mouvement.id }) }}"><i class="fa fa-edit"></i></a></span>
                            <span class="mouvement-delete"><a href="{{ path('mouvement_delete', { 'id': mouvement.id }) }}"><i class="fa fa-trash-alt"></i></a></span>
                        </td>
                    </tr>
                {% else %}
                    <tr>Pas (encore !) de mouvement</tr>
                {% endfor %}
                </tbody>
            </table>

            <div class="panel-footer">
                {{ knp_pagination_render(pagination) }}
            </div>
        </div>
    </main>

    <script type="text/javascript">
        // Initialisation
        let $collectionHolder;
        const $addMouvementButton = $('.add_mouvement_link');

        $(document).ready(function () {
            // On masque le bouton Enregistrer si pas de nouveau mouvement
            $('#save').hide();

            // Récupération des tr qui vont contenir les nouveaux mouvements
            $collectionHolder = $('div.mouvements');

            // Compter les entrées de formulaire actuelles, utilisez-les comme nouveaux
            // index lors de l'insertion d'un nouvel élément
            $collectionHolder.data('index',  $('#count').val());

            // Sur le clic du bouton nouveau mouvement
            $addMouvementButton.on('click', function () {
                // On affiche le bouton Enregistrer si pas de nouveau mouvement
                $('#save').show();

                // On ajoute un nouveau mouvement
                addMouvementForm($collectionHolder);
            });

            // Suppression de mouvements existants sur le clic de la corbeille
            $('.mouvement-delete').on('click', function () {
                $(this).parent().remove();
            });

            // Suppression des nouveaux mouvements
            $('#mouvements-new').on('click', 'td', function () {
                if ($(this).hasClass('mouvement-delete')) {
                    // On supprime le nouveau mouvement du formulaire
                    $(this).parent().remove();

                    // Si aucun nouveau mouvement
                    if ($('#mouvements-new tr').length - 1 === 0) {
                        // On masque le bouton Enregistrer si pas de nouveau mouvement
                        $('#save').hide();

                        // On masque l'en-tête du tableau
                        $('.thead').addClass('d-none');
                    }
                }
            });

            $('#traite input[type="checkbox"]').change(function() {
                const newValue = $(this).is(":checked");
                const oldValue = !newValue;
                const id = $(this).closest('tr').data('id');

                const url = "{{ path('mouvement_update_traite', { action: 'updateTraite', entity: 'mouvement' })|raw }}"
                    + "&id=" + id.toString()
                    + "&newValue=" + newValue.toString();

                const request = $.ajax({ type: "POST", url: url, data: {} });

                request.done(function(result) {
                    // On met à jour le solde courant et prévisionnel
                    $("#courant").html(result.courant);
                    $("#previsionnel").html(result.previsionnel);
                });
                request.fail(function() {
                    $(this).attr("checked", oldValue);
                });
            });
        });

        /**
         * Ajoute un nouveau mouvement
         *
         * @param $collectionHolder
         */
        function addMouvementForm($collectionHolder) {
            // Affiche l'en-tête du tableau des nouveaux mouvements
            $('.thead').removeClass('d-none');

            // Récupération du prototype
            const prototype = $collectionHolder.data('prototype');

            // Récupération du nouvel index
            const index = $collectionHolder.data('index');

            // Récupération du prototype pour le modifier ensuite
            let newForm = prototype;

            // Remplacez '__name__' dans le code HTML du prototype par l'index
            newForm = newForm.replace(/__name__/g, index);

            // Augmenter l'index pour l'élément suivant
            $collectionHolder.data('index', index + 1);

            // Afficher le formulaire dans la page dans le tbody du nouveau tableau
            $('#mouvements-new tbody').append(newForm);

            // Affichage par défaut des valeurs
            const date = new Date().toISOString().slice(0, 10);
            const title = 'Divers';

            $('#mouvements-new input[type=date]').val(date);
            $('#mouvements-new td [id$="_libelle"]').val(title);
        }
    </script>
{% endblock %}
